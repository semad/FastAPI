"""Add file management fields to Book model

Revision ID: 3e642bc709ab
Revises: 
Create Date: 2025-08-09 22:03:25.071427

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3e642bc709ab'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_token_blacklist_token'), table_name='token_blacklist')
    op.drop_table('token_blacklist')
    op.add_column('book', sa.Column('folder_path', sa.String(length=500), nullable=True))
    op.add_column('book', sa.Column('file_size_bytes', sa.Integer(), nullable=True))
    op.add_column('book', sa.Column('content_hash', sa.String(length=64), nullable=True))
    op.create_index(op.f('ix_book_content_hash'), 'book', ['content_hash'], unique=False)
    op.create_index(op.f('ix_book_folder_path'), 'book', ['folder_path'], unique=False)
    op.create_unique_constraint(None, 'rate_limit', ['id'])
    op.create_unique_constraint(None, 'tier', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tier', type_='unique')
    op.drop_constraint(None, 'rate_limit', type_='unique')
    op.drop_index(op.f('ix_book_folder_path'), table_name='book')
    op.drop_index(op.f('ix_book_content_hash'), table_name='book')
    op.drop_column('book', 'content_hash')
    op.drop_column('book', 'file_size_bytes')
    op.drop_column('book', 'folder_path')
    op.create_table('token_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('token_blacklist_pkey'))
    )
    op.create_index(op.f('ix_token_blacklist_token'), 'token_blacklist', ['token'], unique=True)
    # ### end Alembic commands ###
